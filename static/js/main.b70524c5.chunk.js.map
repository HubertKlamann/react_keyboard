{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","document","addEventListener","event","setState","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBACP,SAAS,SAACC,GACR,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,WARnC,kCAaE,WAAwB,IAAD,OACrBC,SAASI,oBACP,SAAS,SAACF,GACR,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,WAhBnC,oBAqBE,WACE,IAAQA,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAG,mCAA+BA,EAA/B,KAAwC,kCA3BtD,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.b70524c5.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener(\n      'keyup', (event: KeyboardEvent) => {\n        this.setState({ key: event.key });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'keyup', (event: KeyboardEvent) => {\n        this.setState({ key: event.key });\n      },\n    );\n  }\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key ? `The last pressed key is [${key}]` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}